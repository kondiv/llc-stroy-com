services:
  llcstroycom.api:
    build:
      context: .
      dockerfile: LLCStroyCom.Api/Dockerfile
    environment:
      - Kestrel__Endpoints__Https__Certificate__Password=${CERT_PASSWORD}
      - ConnectionStrings__DefaultConnection=${DEFAULT_CONNECTION}
      - Jwt__Issuer=${Jwt__Issuer}
      - Jwt__Audience=${Jwt__Audience}
      - Jwt__Key=${Jwt__Key}
      - Jwt__AccessTokenExpirationMinutes=${Jwt__AccessTokenExpirationMinutes}
      - Jwt__RefreshTokenExpirationDays=${Jwt__RefreshTokenExpirationDays}
      - HmacSecret=${HmacSecret}
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=${ASPNETCORE_URLS}
      - DOTNET_RUNNING_IN_CONTAINER=${DOTNET_RUNNING_IN_CONTAINER}
    ports:
      - "5000:5000"
      - "5001:5001"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./certs:/https:ro
    networks:
      default:
  
  database:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - main:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    networks:
      default:
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $DB_USER -d $DB_NAME" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  main:
    
networks:
  default:
    driver: bridge